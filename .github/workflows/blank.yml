name: Split-Obfuscate-Combine Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'op.js'

jobs:
  build-and-obfuscate:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install javascript-obfuscator --no-audit --no-fund --no-save
          fi

      - name: Split op.js into config + logic
        run: |
          set -euo pipefail
          if [ ! -f op.js ]; then
            echo "❌ Error: op.js not found."
            exit 1
          fi

          mkdir -p dist
          head -n 2 op.js > op.config.js
          tail -n +3 op.js > op.logic.js

          if [ ! -s op.logic.js ]; then
            echo "⚠️ Warning: op.logic.js is empty. Skipping obfuscation."
            cp op.config.js dist/opp.js
            exit 0
          fi

      - name: Create obfuscation script
        run: |
          cat > obfuscate-logic.js <<'EOF'
          const fs = require("fs");
          const path = require("path");
          const JavaScriptObfuscator = require("javascript-obfuscator");

          const sourceFile = "op.logic.js";
          const outputDir = "dist";
          const outputFile = path.join(outputDir, "opp.logic.obfuscated.js");

          if (!fs.existsSync(sourceFile)) {
            console.error("❌ Source file missing:", sourceFile);
            process.exit(1);
          }

          if (!fs.existsSync(outputDir)) fs.mkdirSync(outputDir, { recursive: true });
          const originalCode = fs.readFileSync(sourceFile, "utf8");

          const obfuscationOptions = {
            compact: true,
            controlFlowFlattening: true,
            controlFlowFlatteningThreshold: 0.75,
            deadCodeInjection: true,
            deadCodeInjectionThreshold: 0.4,
            stringArray: true,
            stringArrayThreshold: 0.8,
            transformObjectKeys: true,
            esModule: false
          };

          const obfuscatedCode = JavaScriptObfuscator
            .obfuscate(originalCode, obfuscationOptions)
            .getObfuscatedCode();

          fs.writeFileSync(outputFile, obfuscatedCode, "utf8");
          console.log(`✅ Obfuscated logic saved to: ${outputFile}`);
          EOF

      - name: Run obfuscation and merge config + logic
        run: |
          set -euo pipefail
          node obfuscate-logic.js

          if [ ! -f dist/opp.logic.obfuscated.js ]; then
            echo "❌ Missing dist/opp.logic.obfuscated.js"
            exit 1
          fi

          # 拼接配置 + 混淆代码
          cat op.config.js dist/opp.logic.obfuscated.js > dist/opp.js
          echo "✅ Final dist/opp.js created."

      - name: Commit and push dist/opp.js
        run: |
          set -euo pipefail
          git config user.name "GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add dist/opp.js
          if git diff --staged --quiet; then
            echo "ℹ️ No changes to commit."
          else
            git commit -m "build: Split, obfuscate, and combine op.js"
            git push
          fi
