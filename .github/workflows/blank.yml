name: Generate Final Worker Script

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'op.js'

jobs:
  build-and-obfuscate:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install JavaScript Obfuscator
        run: npm install javascript-obfuscator

      # 核心步驟：精準分割、混淆邏輯、然後合併
      - name: Split, Obfuscate, and Combine
        run: |
          # --- 1. 分割文件 ---
          # 根據您的最新文件結構，我們將前 7 行作為不可混淆的配置頭部
          CONFIG_LINE_COUNT=7
          
          head -n $CONFIG_LINE_COUNT op.js > op.config.js
          tail -n +$(($CONFIG_LINE_COUNT + 1)) op.js > op.logic.js
          echo "File split into config (first $CONFIG_LINE_COUNT lines) and logic parts."

          # --- 2. 混淆邏輯部分 ---
          # 創建一個只混淆 op.logic.js 的臨時腳本
          cat > obfuscate-logic.js <<'EOF'
          const fs = require("fs");
          const path = require("path");
          const JavaScriptObfuscator = require("javascript-obfuscator");

          const sourceFile = "op.logic.js";
          const outputDir = "dist";
          const outputFile = path.join(outputDir, "opp.logic.obfuscated.js");

          if (!fs.existsSync(sourceFile)) { process.exit(1); }
          if (!fs.existsSync(outputDir)) { fs.mkdirSync(outputDir); }
          const originalCode = fs.readFileSync(sourceFile, "utf8");

          const obfuscationOptions = {
              esModule: true,
              compact: true,
              controlFlowFlattening: true,
              deadCodeInjection: true,
              stringArray: true,
              renameGlobals: true,
          };

          const obfuscatedCode = JavaScriptObfuscator.obfuscate(originalCode, obfuscationOptions).getObfuscatedCode();
          fs.writeFileSync(outputFile, obfuscatedCode, "utf8");
          console.log(`Obfuscated logic saved to: ${outputFile}`);
          EOF
          node obfuscate-logic.js

          # --- 3. 合併文件 ---
          # 為了格式美觀，在配置和混淆代碼之間加一個換行
          echo "" >> op.config.js
          # 將乾淨的配置和混淆後的邏輯合併成最終的 opp.js 文件
          cat op.config.js dist/opp.logic.obfuscated.js > dist/opp.js
          echo "Final opp.js file created successfully."

      - name: Commit and push the final file
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git add dist/opp.js
          
          if git diff --staged --quiet; then
            echo "No changes to commit, dist/opp.js is already up-to-date."
          else
            git commit -m "build: Generate final obfuscated worker script"
            git push
          fi
