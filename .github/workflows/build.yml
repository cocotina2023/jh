name: Obfuscate and Deploy op.js

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Step 3: Install JavaScript Obfuscator
      - name: Install JavaScript Obfuscator
        run: npm install -g javascript-obfuscator

      # Step 4: Check and insert dynamic workerID and proxyIPs
      - name: Check and insert dynamic workerID and proxyIPs
        run: |
          set -euo pipefail

          # 默认的 workerID 和 proxyIPs
          DEFAULT_USER_ID="a1b2c3d4-e5f6-7890-1234-567890abcdef"
          DEFAULT_PROXY_IPS='[""]'

          # 提取文件开头的 workerID 和 proxyIPs
          WORKER_ID=$(grep -oP 'let\s+workerID\s*=\s*"\K[^"]+' opp.js || echo "")
          PROXY_IPS=$(grep -oP 'const\s+proxyIPs\s*=\s*\[\K[^\]]+' opp.js || echo "")

          # 如果没被修改，则插入默认值
          if [ -z "$WORKER_ID" ] || [ "$WORKER_ID" == "$DEFAULT_USER_ID" ]; then
            echo "Using default workerID"
            WORKER_ID="$DEFAULT_USER_ID"
          fi

          if [ -z "$PROXY_IPS" ] || [ "$PROXY_IPS" == "$DEFAULT_PROXY_IPS" ]; then
            echo "Using default proxyIPs"
            PROXY_IPS="$DEFAULT_PROXY_IPS"
          fi

          # 保存环境变量
          echo "WORKER_ID=$WORKER_ID" >> $GITHUB_ENV
          echo "PROXY_IPS_JSON=$PROXY_IPS" >> $GITHUB_ENV

      # Step 5: Obfuscate op.js and prepend dynamic workerID and proxyIPs
      - name: Obfuscate op.js and prepend dynamic workerID and proxyIPs
        run: |
          set -euo pipefail

          # 检查环境变量
          if [ -z "${WORKER_ID}" ] || [ -z "${PROXY_IPS_JSON}" ]; then
            echo "Error: WORKER_ID or PROXY_IPS_JSON is not set!"
            exit 1
          fi

          # 临时目录
          mkdir -p .github/actions-temp
          TMP_OBF=.github/actions-temp/op.obf.js
          OUT=opp.js

          # 混淆 op.js 文件
          javascript-obfuscator op.js --output "$TMP_OBF" --compact true \
            --control-flow-flattening true \
            --control-flow-flattening-threshold 0.75 \
            --dead-code-injection true \
            --dead-code-injection-threshold 0.4 \
            --string-array true \
            --string-array-encoding base64 \
            --string-array-threshold 0.75 \
            --rename-globals true \
            --identifier-names-generator mangled \
            --numbers-to-expressions true \
            --split-strings true \
            --split-strings-chunk-length 10 \
            --transform-object-keys true \
            --self-defending false \
            --debug-protection false \
            --disable-console-output true

          # 将动态生成的 workerID 和 proxyIPs 写入文件头部
          cat > "$OUT" <<EOF
          let workerID = "${WORKER_ID}";
          const proxyIPs = ${PROXY_IPS_JSON};
          EOF

          # 将混淆后的代码附加到文件中
          cat "$TMP_OBF" >> "$OUT"

          # 清理临时文件
          rm -rf .github/actions-temp

          echo "✅ Generated $OUT at repo root"

      # Step 6: Ensure op.js is ignored and commit opp.js
      - name: Ensure op.js ignored and commit opp.js
        run: |
          set -euo pipefail

          # 确保 op.js 被添加到 .gitignore
          touch .gitignore
          if ! grep -Fxq 'op.js' .gitignore; then
            echo 'op.js' >> .gitignore
            echo 'Added op.js to .gitignore'
          fi

          # 配置 Git 提交信息
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .gitignore opp.js

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m 'build: generate obfuscated opp.js'
            git push
          fi

      # Step 7: Preview opp.js (first 10 lines)
      - name: Preview opp.js header (first 10 lines)
        run: |
          echo "----- opp.js (first 10 lines) -----"
          head -n 10 opp.js || true
          echo "-----------------------------------"
