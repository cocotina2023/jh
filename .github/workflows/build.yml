name: Obfuscate all .js build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      # 默认值（可在仓库 Settings -> Secrets / Variables 中覆盖）
      USER_ID: a1b2c3d4-e5f6-7890-1234-567890abcdef
      PROXY_IPS_JSON: '[""]'
      OUT_FILE: opp.js

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install JavaScript Obfuscator
        run: npm install -g javascript-obfuscator

      - name: Obfuscate all tracked .js files and build ${OUT_FILE}
        run: |
          set -euo pipefail

          TMP_DIR=.github/actions-temp
          mkdir -p "$TMP_DIR"
          TMP_OBF="$TMP_DIR/file.obf.js"
          OUT="$OUT_FILE"

          # get tracked .js files (omit this workflow and generated file)
          mapfile -t JS_FILES < <(git ls-files '*.js' | grep -vE '^.github/|^node_modules/|^'"$OUT"'$' || true)

          if [ "${#JS_FILES[@]}" -eq 0 ]; then
            echo "No tracked .js files found. Exiting."
            exit 0
          fi

          # start fresh output file and write header (avoid heredoc to prevent YAML issues)
          echo "let userID = \"${USER_ID}\";" > "$OUT"
          echo "const proxyIPs = ${PROXY_IPS_JSON};" >> "$OUT"
          echo "" >> "$OUT"

          for src in "${JS_FILES[@]}"; do
            echo "Processing: $src"
            # obfuscate to temp file
            javascript-obfuscator "$src" --output "$TMP_OBF" --compact true \
              --control-flow-flattening true \
              --control-flow-flattening-threshold 0.75 \
              --dead-code-injection true \
              --dead-code-injection-threshold 0.4 \
              --string-array true \
              --string-array-encoding base64 \
              --string-array-threshold 0.75 \
              --rename-globals true \
              --identifier-names-generator mangled \
              --numbers-to-expressions true \
              --split-strings true \
              --split-strings-chunk-length 10 \
              --transform-object-keys true \
              --self-defending false \
              --debug-protection false \
              --disable-console-output true

            # defensive cleanup: remove injected comment/header lines and BOM, non-printables
            sed -i '/^\/\/ *<!--.*-->.*$/d' "$TMP_OBF" || true
            sed -i '/^\s*<!--.*-->.*$/d' "$TMP_OBF" || true
            sed -i '/^\s*let\s\+userID\s*=/d' "$TMP_OBF" || true
            sed -i '/^\s*const\s\+proxyIPs\s*=/d' "$TMP_OBF" || true
            sed -i '1s/^\xEF\xBB\xBF//' "$TMP_OBF" || true
            tr -cd '\11\12\15\40-\176' < "$TMP_OBF" > "${TMP_OBF}.clean" || true
            mv "${TMP_OBF}.clean" "$TMP_OBF" || true

            # append a comment indicating original filename for debugging (optional)
            printf "\n// ----- FILE: %s -----\n" "$src" >> "$OUT"
            cat "$TMP_OBF" >> "$OUT"
            printf "\n// ----- END FILE: %s -----\n\n" "$src" >> "$OUT"

            rm -f "$TMP_OBF"
          done

          # cleanup
          rm -rf "$TMP_DIR"

          echo "✅ Generated $OUT at repo root"

      - name: Ensure source .js ignored and commit opp.js
        run: |
          set -euo pipefail

          # add common source files to .gitignore to avoid accidental commits (adjust as needed)
          touch .gitignore
          for p in op.js src/*.js; do
            # only add if file exists in repo root or matched by git ls-files previously
            if [ -e "$p" ] && ! grep -Fxq "$p" .gitignore; then
              echo "$p" >> .gitignore
              echo "Added $p to .gitignore"
            fi
          done

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .gitignore "${OUT_FILE}" || true

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m 'build: generate obfuscated opp.js (all tracked .js files)'
            git push
          fi

      - name: Preview opp.js header (first 20 lines)
        run: |
          echo "----- ${OUT_FILE} (first 20 lines) -----"
          head -n 20 "${OUT_FILE}" || true
          echo "----------------------------------------"
