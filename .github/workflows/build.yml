name: Build and Obfuscate op.js

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许 workflow push 回仓库

    steps:
      # 1. Checkout 仓库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # 3. 安装依赖项
      - name: Install dependencies
        run: |
          npm install -g javascript-obfuscator

      # 4. 设置环境变量（可以通过手动触发来传递这些值）
      - name: Set Environment Variables
        run: |
          echo "USER_ID=${{ secrets.USER_ID }}" >> $GITHUB_ENV
          echo "PROXY_IPS=${{ secrets.PROXY_IPS }}" >> $GITHUB_ENV

      # 5. 混淆 op.js 文件，并保持一行混淆代码
      - name: Obfuscate op.js
        run: |
          set -euo pipefail

          # 如果没有 op.js 文件则退出
          if [ ! -f op.js ]; then
            echo "Error: op.js not found in repo root"
            exit 1
          fi

          # 创建临时目录和输出文件
          mkdir -p .github/actions-temp
          TMP_OBF=.github/actions-temp/op.obf.js
          OUT=opp.js

          # 混淆 op.js 文件，并生成一行混淆代码
          javascript-obfuscator op.js --output "$TMP_OBF" --compact true \
            --control-flow-flattening true \
            --dead-code-injection true \
            --string-array true \
            --rename-globals true \
            --numbers-to-expressions true \
            --split-strings true \
            --transform-object-keys true \
            --self-defending false \
            --debug-protection false \
            --disable-console-output true \
            --wrap=true

          # 获取传入的动态值并插入到 opp.js 文件头部
          cat > "$OUT" <<EOF
          // BEGIN USER CONFIGURABLE SECTION
          let userID = "${USER_ID}";  // 这里会自动使用传入的 USER_ID
          const proxyIPs = ${PROXY_IPS};  // 这里会自动使用传入的 PROXY_IPS
          // END USER CONFIGURABLE SECTION

          EOF

          # 追加混淆后的 op.js 内容（将其合并为一行）
          cat "$TMP_OBF" >> "$OUT"

          # 清理临时文件
          rm -rf .github/actions-temp

          echo "✅ Generated opp.js at repo root"

      # 6. 提交生成的 opp.js 文件
      - name: Commit and push opp.js
        run: |
          set -euo pipefail

          # 确保 op.js 不会被提交
          touch .gitignore
          if ! grep -Fxq 'op.js' .gitignore; then
            echo 'op.js' >> .gitignore
            echo 'Added op.js to .gitignore'
          fi

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .gitignore opp.js

          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m 'build: generate obfuscated opp.js'
            git push
          fi

      # 7. 预览生成的 opp.js 头部内容（前 10 行）
      - name: Preview opp.js header (first 10 lines)
        run: |
          echo "----- opp.js (first 10 lines) -----"
          head -n 10 opp.js || true
          echo "-----------------------------------"
