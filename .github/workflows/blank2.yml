name: Obfuscate op.js with env UUID

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-obfuscate:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout 仓库并使用 GITHUB_TOKEN
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          npm install -g javascript-obfuscator
          npm install uuid

      # 4. Generate and obfuscate op.js
      - name: Generate and obfuscate op.js
        run: |
          node -e "
          const fs = require('fs');
          const path = require('path');
          const { v4: uuidv4 } = require('uuid');
          const JavaScriptObfuscator = require('javascript-obfuscator');

          const sourceFile = 'op.js';
          const outputDir = 'dist';
          const outputFile = path.join(outputDir, 'opp.js');

          if (!fs.existsSync(sourceFile)) {
            console.error(\`Error: \${sourceFile} not found!\`);
            process.exit(1);
          }

          if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir);
          }

          const originalCode = fs.readFileSync(sourceFile, 'utf8');

          const obfuscationOptions = {
            esModule: true,
            compact: true,
            controlFlowFlattening: true,
            controlFlowFlatteningThreshold: 0.75,
            deadCodeInjection: true,
            deadCodeInjectionThreshold: 0.4,
            stringArray: true,
            stringArrayEncoding: ['base64'],
            stringArrayThreshold: 0.75,
            renameGlobals: true,
            identifierNamesGenerator: 'mangled',
            numbersToExpressions: true,
            splitStrings: true,
            splitStringsChunkLength: 10,
            transformObjectKeys: true,
            selfDefending: false,
            debugProtection: false
          };

          const obfuscatedCode = JavaScriptObfuscator.obfuscate(originalCode, obfuscationOptions).getObfuscatedCode();

          const userID = process.env.USER_ID || uuidv4();
          const proxyIPsEnv = process.env.PROXY_IPS || '';
          const proxyArray = proxyIPsEnv.split(',').map(ip => ip.trim()).filter(ip => ip.length > 0);

          const header = \`let userID = \"\${userID}\";\nconst proxyIPs = [\${proxyArray.map(ip => '\"' + ip + '\"').join(', ')}];\`;

          const finalCode = header + '\n\n' + obfuscatedCode;

          fs.writeFileSync(outputFile, finalCode, 'utf8');
          console.log(\`Obfuscated file written to \${outputFile}\`);
          "
        env:
          USER_ID: ${{ secrets.USER_ID || '' }}
          PROXY_IPS: ${{ secrets.PROXY_IPS || '' }}

      # 5. Commit & push opp.js
      - name: Commit and push opp.js
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git add dist/opp.js

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "build: Obfuscate op.js to dist/opp.js"
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            git push origin "$BRANCH"
          fi

      # 6. Preview opp.js first 20 lines
      - name: Preview opp.js (first 20 lines)
        run: |
          echo "----- opp.js (first 20 lines) -----"
          head -n 20 dist/opp.js || true
          echo "-----------------------------------"
