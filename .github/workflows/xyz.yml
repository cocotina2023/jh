name: Obfuscate op.js -> opp.js (preserve header, no UUID validation)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install JavaScript Obfuscator (local)
        run: npm install javascript-obfuscator

      - name: Build opp.js (preserve let userID header, safe combine)
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: |
          node <<'NODE'
          const fs = require('fs');
          const path = require('path');
          const JavaScriptObfuscator = require('javascript-obfuscator');

          const srcPath = path.resolve('op.js');
          const outPath = path.resolve('opp.js');

          if (!fs.existsSync(srcPath)) {
            console.error('Error: op.js not found in repo root. Place your source op.js at repo root.');
            process.exit(1);
          }

          const src = fs.readFileSync(srcPath, 'utf8');

          // Try to extract header: let userID = "..." ; const proxyIPs = [...];
          const headerRegex = /let\s+userID\s*=\s*"([^"]*)"\s*;\s*[\r\n]+const\s+proxyIPs\s*=\s*\[[^\]]*\]\s*;?/i;
          const m = src.match(headerRegex);

          let headerText, bodyText;
          if (m) {
            headerText = m[0].trim();
            // remove only the first occurrence of the matched header
            const idx = src.indexOf(m[0]);
            bodyText = src.slice(0, idx) + src.slice(idx + m[0].length);
            // ensure the remainder is used as body
            bodyText = bodyText;
            console.log('Found header in op.js — preserving it.');
          } else {
            headerText = 'let userID = "a1b2c3d4-e5f6-7890-1234-567890abcdef";\nconst proxyIPs = [""];';
            bodyText = src;
            console.warn('Header not found in op.js — injecting default header.');
          }

          // Obfuscation options (do NOT rename globals so let userID remains userID)
          const options = {
            compact: true,
            controlFlowFlattening: true,
            controlFlowFlatteningThreshold: 0.75,
            deadCodeInjection: true,
            deadCodeInjectionThreshold: 0.4,
            stringArray: true,
            stringArrayEncoding: ['base64'],
            stringArrayThreshold: 0.75,
            renameGlobals: false, // keep global identifiers intact
            identifierNamesGenerator: 'mangled',
            numbersToExpressions: true,
            splitStrings: true,
            splitStringsChunkLength: 10,
            transformObjectKeys: true,
            selfDefending: false,
            debugProtection: false,
            disableConsoleOutput: true
          };

          const obf = JavaScriptObfuscator.obfuscate(bodyText, options).getObfuscatedCode();

          // SAFE combine: header + semicolon line + IIFE + obfuscated code
          let final = headerText + '\n;\n(function(){\n' + obf + '\n})();\n';

          // Remove any injected comment markers like // <!--...--> or HTML comments
          final = final.replace(/^\/\/ *<!--.*-->.*$/gm, '');
          final = final.replace(/^\s*<!--.*-->.*$/gm, '');

          fs.writeFileSync(outPath, final, 'utf8');
          console.log('✅ opp.js generated at', outPath);
          console.log('----- opp.js preview (first 20 lines) -----');
          console.log(final.split(/\r?\n/).slice(0,20).join('\n'));
          console.log('-------------------------------------------');
          NODE

      - name: Ensure op.js ignored and commit opp.js
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          if ! grep -qx 'op.js' .gitignore 2>/dev/null; then
            echo 'op.js' >> .gitignore
          fi
          git add .gitignore opp.js
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m 'build: generate obfuscated opp.js (header preserved)'
            git push
          fi

      - name: Show opp.js preview (first 20 lines)
        run: |
          echo "===== opp.js (first 20 lines) ====="
          head -n 20 opp.js || true
          echo "==================================="
